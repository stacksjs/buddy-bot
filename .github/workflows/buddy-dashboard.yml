name: Buddy Dashboard Management

on:
  schedule:
    - cron: '0 9 * * 1,3,5' # Monday, Wednesday, Friday at 9 AM UTC
  workflow_dispatch: # Manual triggering
    inputs:
      pin:
        description: Pin the dashboard issue
        required: false
        default: true
        type: boolean
      title:
        description: Custom dashboard title
        required: false
        type: string
      issue_number:
        description: Specific issue number to update
        required: false
        type: string
      verbose:
        description: Enable verbose logging
        required: false
        default: true
        type: boolean
      dry_run:
        description: Dry run (preview only)
        required: false
        default: false
        type: boolean

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read
  pull-requests: read
  issues: write
  actions: read
  checks: read
  statuses: read

jobs:
  update-dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup PHP and Composer (if needed)
        if: ${{ hashFiles('composer.json') != '' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer
          coverage: none

      - name: Install dependencies
        run: bun install

      - name: Install Composer dependencies (if needed)
        if: ${{ hashFiles('composer.json') != '' }}
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Build buddy-bot
        run: bun run build

      - name: Display dashboard configuration
        run: |
          echo "📊 **Buddy Bot Dashboard Management**"
          echo "Pin Dashboard: ${{ github.event.inputs.pin || 'true' }}"
          echo "Custom Title: ${{ github.event.inputs.title || 'default' }}"
          echo "Issue Number: ${{ github.event.inputs.issue_number || 'auto-detect' }}"
          echo "Verbose: ${{ github.event.inputs.verbose || 'true' }}"
          echo "Dry Run: ${{ github.event.inputs.dry_run || 'false' }}"
          echo "Triggered by: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"

      - name: Update Dependency Dashboard
        run: |
          PIN="${{ github.event.inputs.pin || 'true' }}"
          TITLE="${{ github.event.inputs.title }}"
          ISSUE_NUMBER="${{ github.event.inputs.issue_number }}"
          VERBOSE="${{ github.event.inputs.verbose || 'true' }}"
          DRY_RUN="${{ github.event.inputs.dry_run || 'false' }}"

          echo "📊 Updating dependency dashboard..."
          echo "Pin: $PIN"
          echo "Title: ${TITLE:-default}"
          echo "Issue Number: ${ISSUE_NUMBER:-auto-detect}"
          echo "Verbose: $VERBOSE"
          echo "Dry Run: $DRY_RUN"
          echo ""

          set -e  # Exit on any error

          # Build the command
          COMMAND="bun buddy dashboard"

          if [ "$PIN" = "true" ]; then
            COMMAND="$COMMAND --pin"
          fi

          if [ "$TITLE" != "" ]; then
            COMMAND="$COMMAND --title \"$TITLE\""
          fi

          if [ "$ISSUE_NUMBER" != "" ]; then
            COMMAND="$COMMAND --issue-number \"$ISSUE_NUMBER\""
          fi

          if [ "$VERBOSE" = "true" ]; then
            COMMAND="$COMMAND --verbose"
          fi

          if [ "$DRY_RUN" = "true" ]; then
            echo "📋 DRY RUN MODE - Command that would be executed:"
            echo "$COMMAND"
            echo ""
            echo "ℹ️ In dry run mode, dashboard content would be generated but no issue would be created/updated"

            # Run scan to show what would be included
            echo "🔍 Scanning for dependencies that would be included:"
            if [ "$VERBOSE" = "true" ]; then
              bun buddy scan --verbose
            else
              bun buddy scan
            fi
          else
            echo "🚀 Executing dashboard update:"
            echo "$COMMAND"
            echo ""
            eval "$COMMAND"
          fi

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dry run notification
        if: ${{ github.event.inputs.dry_run == 'true' }}
        run: |
          echo "ℹ️ **Dry Run Mode** - Dashboard preview completed"
          echo "To actually update the dashboard, run this workflow again with 'Dry run' set to false"

      - name: Check dashboard status
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          echo "✅ Dashboard update completed"
          echo "🔗 Check your repository issues for the updated dependency dashboard"

          # Try to find and link to the dashboard issue
          echo "📊 Looking for dependency dashboard issue..."

          # Use GitHub CLI to find the dashboard issue
          if command -v gh &> /dev/null; then
            DASHBOARD_URL=$(gh issue list --label "dashboard,dependencies" --state open --limit 1 --json url --jq '.[0].url' 2>/dev/null || echo "")
            if [ "$DASHBOARD_URL" != "null" ] && [ "$DASHBOARD_URL" != "" ]; then
              echo "🎯 Dashboard found: $DASHBOARD_URL"
            else
              echo "🔍 Dashboard issue not found via CLI, check issues manually"
            fi
          else
            echo "💡 Check your issues tab for the dependency dashboard"
          fi

      - name: Create dashboard summary
        if: always()
        run: |
          echo "## 📊 Dependency Dashboard Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Pin Dashboard**: ${{ github.event.inputs.pin || 'true' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Custom Title**: ${{ github.event.inputs.title || 'default' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Issue Number**: ${{ github.event.inputs.issue_number || 'auto-detect' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry run**: ${{ github.event.inputs.dry_run || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Verbose**: ${{ github.event.inputs.verbose || 'true' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "⏰ **Scheduled Update**: This was triggered automatically" >> $GITHUB_STEP_SUMMARY
            echo "🔄 **Schedule**: Monday, Wednesday, Friday at 9 AM UTC" >> $GITHUB_STEP_SUMMARY
            echo "💡 **Tip**: Use 'Actions' tab to manually trigger with custom settings" >> $GITHUB_STEP_SUMMARY
          else
            echo "🖱️ **Manual Trigger**: This was triggered manually from the Actions tab" >> $GITHUB_STEP_SUMMARY
            echo "⏰ **Auto-Schedule**: This workflow also runs automatically on schedule" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "📋 **Dry Run**: No changes were made. Dashboard content was previewed only." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Dashboard Updated**: Check your repository issues for the updated dependency dashboard." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 View detailed logs above for dashboard update results." >> $GITHUB_STEP_SUMMARY
