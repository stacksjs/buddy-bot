name: Buddy Update Check

on:
  schedule:
    - cron: '*/1 * * * *' # Check every 1 minute (GitHub Actions has rate limits for frequent schedules)
  workflow_dispatch: # Manual trigger
    inputs:
      dry_run:
        description: Dry run (preview only)
        required: false
        default: false
        type: boolean

env:
  # For workflow file updates, you need a Personal Access Token with 'repo' and 'workflow' scopes
  # Create a PAT at: https://github.com/settings/tokens
  # Add it as a repository secret named 'BUDDY_BOT_TOKEN'
  # If BUDDY_BOT_TOKEN is not available, falls back to GITHUB_TOKEN (limited permissions)
  GITHUB_TOKEN: ${{ secrets.BUDDY_BOT_TOKEN || secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: write

jobs:
  check-rebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BUDDY_BOT_TOKEN || secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # Fetch full history for rebasing
          persist-credentials: true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build buddy-bot
        run: bun run build

      - name: Configure Git
        run: |
          git config --global user.name "buddy-bot[bot]"
          git config --global user.email "buddy-bot[bot]@users.noreply.github.com"

      - name: Check token permissions
        run: |
          if [ -z "${{ secrets.BUDDY_BOT_TOKEN }}" ]; then
            echo "⚠️ Using GITHUB_TOKEN (limited permissions)"
            echo "💡 For full workflow file update support:"
            echo "   1. Create a Personal Access Token with 'repo' and 'workflow' scopes"
            echo "   2. Add it as repository secret 'BUDDY_BOT_TOKEN'"
            echo "   3. Re-run this workflow"
          else
            echo "✅ Using BUDDY_BOT_TOKEN (full permissions)"
          fi

      - name: Check for rebase requests
        run: |
          echo "🔍 Checking for PRs with rebase checkbox enabled..."
          echo "🔧 Environment info:"
          echo "Current directory: $(pwd)"
          echo "GITHUB_TOKEN set: $([[ -n \"$GITHUB_TOKEN\" ]] && echo \"Yes\" || echo \"No\")"
          echo "Repository: ${{ github.repository }}"
          echo "Event: ${{ github.event_name }}"
          echo ""

          echo "🚀 Running check-rebase command..."
          set -e  # Exit on any error

          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "📋 Running in DRY RUN mode..."
            bun buddy check-rebase --dry-run --verbose
          else
            echo "🔄 Running in LIVE mode..."
            bun buddy check-rebase --verbose
          fi

        env:
          GITHUB_TOKEN: ${{ secrets.BUDDY_BOT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Create summary
        if: always()
        run: |
          echo "## 🔄 Rebase Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry run**: ${{ github.event.inputs.dry_run || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "⏰ **Scheduled Check**: Automatically checks every 15 minutes" >> $GITHUB_STEP_SUMMARY
          else
            echo "🖱️ **Manual Check**: Manually triggered from Actions tab" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 View detailed logs above for rebase results." >> $GITHUB_STEP_SUMMARY
